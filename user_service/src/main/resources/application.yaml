spring:
  application:
    name: user-service
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/spring-cloud-ecosystem
      client:
        registration:
          notification-service:
            authorization-grant-type: client_credentials
            client-id: notification-service
            client-secret: UrgRSos0ZxJc15hXUPPvBoikHwREZU1I
        provider:
          notification-service:
            token-uri: http://localhost:8080/realms/spring-cloud-ecosystem/protocol/openid-connect/token

server:
  port: 0
eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
  instance:
    hostname: localhost
    prefer-ip-address: true

resilience4j.circuitbreaker:
  instances:
    notification_circuit_breaker: # Must match the name in @CircuitBreaker
      registerHealthIndicator: true
      slidingWindowSize: 5
      minimumNumberOfCalls: 5
      failureRateThreshold: 50
      waitDurationInOpenState: 10s
      permittedNumberOfCallsInHalfOpenState: 3
      eventConsumerBufferSize: 10

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always


logging:
  level:
    org:
      springframework:
        security: DEBUG